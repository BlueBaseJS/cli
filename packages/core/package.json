{
	"name": "@bluebase/cli-core",
	"description": "A plugin for BlueRain CLI",
	"version": "1.6.0",
	"author": "BlueEast Team <code@blueeast.com>",
	"main": "./lib",
	"sideEffects": false,
	"bugs": "https://github.com/BlueBaseJS/cli/issues",
	"dependencies": {
		"@oclif/command": "^1",
		"@oclif/config": "^1",
		"deepmerge": "^2.1.1",
		"detect-installed": "^2.0.4",
		"dotenv": "^6.0.0",
		"file-regex": "^2.1.1",
		"inquirer": "^6.2.0",
		"lodash.isnil": "^4.0.0",
		"lodash.template": "^4.4.0",
		"node-notifier": "^5.2.1",
		"shelljs": "^0.8.2",
		"tslib": "^1",
		"winston": "^3.0.0",
		"yarn-install": "^1.0.0"
	},
	"devDependencies": {
		"@blueeast/tslint-config-blueeast": "^0.5.6",
		"@oclif/dev-cli": "^1",
		"@oclif/plugin-help": "^2",
		"@oclif/test": "^1",
		"@oclif/tslint": "^1",
		"@semantic-release/git": "^7.1.0-beta.3",
		"@semantic-release/github": "5.5.0",
		"@semantic-release/npm": "5.2.0",
		"@semantic-release/release-notes-generator": "7.3.0",
		"@types/app-root-dir": "^0.1.0",
		"@types/deepmerge": "^2.1.0",
		"@types/dotenv": "^4.0.3",
		"@types/inquirer": "^0.0.43",
		"@types/lodash.isnil": "^4.0.4",
		"@types/lodash.template": "^4.4.4",
		"@types/node": "^14.6.0",
		"@types/node-notifier": "^0.0.28",
		"@types/react": "^16.4.10",
		"@types/shelljs": "^0.8.0",
		"@types/winston": "^2.4.4",
		"npm-run-all": "^4.1.3",
		"ts-node": "^8.4.1",
		"tslint": "5.11.0",
		"typescript": "^3.6.3"
	},
	"peerDependencies": {
		"react": "^16.*"
	},
	"engines": {
		"node": ">=8.0.0"
	},
	"files": [
		"/assets",
		"/lib",
		"/templates",
		"/npm-shrinkwrap.json",
		"/oclif.manifest.json",
		"/yarn.lock"
	],
	"homepage": "https://github.com/BlueBaseJS/cli",
	"keywords": [
		"oclif-plugin"
	],
	"license": "MIT",
	"oclif": {
		"commands": "./lib/commands",
		"bin": "oclif-example",
		"devPlugins": [
			"@oclif/plugin-help"
		]
	},
	"repository": "https://github.com/BlueBaseJS/cli",
	"scripts": {
		"postpack": "rm -f oclif.manifest.json npm-shrinkwrap.json",
		"posttest": "tsc -p test --noEmit && tslint -p test -t stylish",
		"prepack": "rm -rf lib && tsc && oclif-dev manifest && oclif-dev readme && npm shrinkwrap",
		"prepare": "rm -rf lib && tsc",
		"test:unit": "nyc mocha --forbid-only \"test/**/*.test.ts\"",
		"version": "oclif-dev readme && git add README.md",
		"start": "ts-node ./src/test.ts",
		"clean": "rimraf coverage lib tmp",
		"watch": "tsc -w -p tsconfig.json",
		"watch:test": "jest --watch",
		"lint": "tslint -t stylish --project \"../../tsconfig.json\"",
		"test:only": "jest --coverage",
		"info": "npm-scripts-info",
		"build": "run-s clean && run-p build:*",
		"build:main": "tsc -p tsconfig.json",
		"fix": "run-s fix:*",
		"fix:prettier": "prettier \"src/**/*.ts\" --write",
		"fix:tslint": "tslint --fix --project .",
		"test": "run-s build test:*",
		"test:lint": "npm run lint",
		"test:prettier": "prettier \"src/**/*.ts\" --list-different",
		"commit": "git-cz",
		"cov": "run-s build test:unit cov:html && opn coverage/index.html",
		"cov:html": "nyc report --reporter=html",
		"cov:send": "nyc report --reporter=lcov > coverage.lcov && codecov",
		"cov:check": "nyc report && nyc check-coverage --lines 100 --functions 100 --branches 100",
		"doc": "run-s doc:html && opn lib/docs/index.html",
		"doc:html": "typedoc src/ --target ES6 --mode file --out lib/docs",
		"doc:json": "typedoc src/ --target ES6 --mode file --json lib/docs/typedoc.json",
		"doc:publish": "gh-pages -m \"[ci skip] Updates\" -d lib/docs",
		"reset": "git clean -dfx && git reset --hard && npm i",
		"all": "run-s reset test cov:check doc:html",
		"prepare-release": "run-s all version doc:publish"
	},
	"scripts-info": {
		"info": "Display information about the package scripts",
		"build": "Clean and rebuild the project",
		"fix": "Try to automatically fix any linting problems",
		"test": "Lint and unit test the project",
		"watch": "Watch and rebuild the project on save",
		"cov": "Rebuild, run tests, then create and open the coverage report",
		"doc": "Generate HTML API documentation and open it in a browser",
		"doc:json": "Generate API documentation in typedoc JSON format",
		"version": "Bump package.json version, update CHANGELOG.md, tag release",
		"reset": "Delete all untracked files and reset the repo to the last commit",
		"prepare-release": "One-step: clean, build, test, publish docs, and prep a release"
	}
}
